version: "3.5"

services:
  db:
    image: postgres:9.4
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      # https://github.com/peter-evans/docker-compose-healthcheck
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 15s
      timeout: 15s
      retries: 5
    deploy:
      placement:
        # deploy constraints https://docs.docker.com/compose/compose-file/#placement
        constraints:
          - node.labels.type == dataworker-manager
  app:
    image: registry.gitlab.com/hcmc/python-hello-swarm/release:latest
    volumes:
      - app-data:/app/data
    ports:
      - target: 8000
        published: 8000
        protocol: tcp
        mode: ingress
    networks:
      - backend
    depends_on:
      - db
    configs:
      - source: python-hello-swarm
        target: /app/env
    healthcheck:
      # https://github.com/peter-evans/docker-compose-healthcheck
      # test: ["CMD-SHELL", "curl -f http://localhost:8000/ || exit 1"]
      test: ["CMD-SHELL", "./healthcheck.sh"]
      interval: 3s
      timeout: 1s
      retries: 3
    deploy:
      placement:
        # deploy constraints https://docs.docker.com/compose/compose-file/#placement
        constraints:
          - node.labels.type == data-worker

networks:
  # https://docs.docker.com/compose/networking/#use-a-pre-existing-network
  external:
      name: backend

volumes:
  # current app doesn't require persistent volume
  # app-data:
  #   driver_opts:
  #     type: none
  #     device: "/mnt/app-data/python-hello-swarm"
  #     o: bind
  db-data:
    driver_opts:
      type: none
      device: "/mnt/db-data/python-hello-swarm"
      o: bind


configs:
  python-hello-swarm:
    file: ./env